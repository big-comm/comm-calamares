#!/bin/bash

# Prepara o ambiente de tradução
export TEXTDOMAINDIR="/usr/share/locale"
export TEXTDOMAIN=calamares-biglinux

# Arquivo de controle para o Calamares
touch /tmp/biglinux-wait-install

# Salva o separador de campo padrão e define um novo para lidar com novas linhas
OIFS=$IFS
IFS=$'\n'

# Garante que não há um início de Calamares pendente
rm -f /tmp/start_calamares

# Configura o tipo de sistema de arquivos baseado na opção do usuário
if [ "$option" = "btrfs" ]; then
    cp -f /usr/share/bigbashview/apps/calamares/partition.conf /etc/calamares/modules/partition.conf
    > /tmp/start_calamares
fi

if [ "$option" = "ext4" ]; then
    cp -f /usr/share/bigbashview/apps/calamares/partition.conf /etc/calamares/modules/partition.conf
    sed -i 's/defaultFileSystemType.*/defaultFileSystemType: "ext4"/' /etc/calamares/modules/partition.conf
    > /tmp/start_calamares
fi

###### Detecta a pasta com os arquivos .sfs (lógica aprimorada)
sfsFolder=""
# Tenta com a pasta padrão do Manjaro
if [[ -e /run/miso/bootmnt/manjaro/x86_64/ ]]; then
  sfsFolder="manjaro"
# Tenta com uma pasta com o mesmo nome do HOSTNAME
elif [[ -e /run/miso/bootmnt/$HOSTNAME/x86_64/ ]]; then
  sfsFolder="$HOSTNAME"
# Tenta com a primeira pasta que não seja 'efi' ou 'boot'
elif [[ -e $(ls -d1 /run/miso/bootmnt/*/ | grep -ve '/efi/' -ve '/boot/') ]]; then
    sfsFolderFullPath="$(ls -d1 /run/miso/bootmnt/*/ | grep -ve '/efi/' -ve '/boot/' | head -n1)"
    # Remove a barra final do nome da pasta, se houver
    sfsFolderFullPath="${sfsFolderFullPath%/}"
    # Extrai apenas o nome base da pasta
    sfsFolder="${sfsFolderFullPath##*/}"
fi
######

# Gera o arquivo unpackfs.conf (lógica original mantida)
if [ "$use_custom_desktop" = "yes" ]; then
echo "---
unpack:
    - source: \"/run/miso/bootmnt/$sfsFolder/x86_64/rootfs.sfs\"
      sourcefs: \"squashfs\"
      destination: \"\"" > /etc/calamares/modules/unpackfs.conf
else
echo "---
unpack:
    - source: \"/run/miso/bootmnt/$sfsFolder/x86_64/rootfs.sfs\"
      sourcefs: \"squashfs\"
      destination: \"\"
    - source: \"/run/miso/bootmnt/$sfsFolder/x86_64/desktopfs.sfs\"
      sourcefs: \"squashfs\"
      destination: \"\"" > /etc/calamares/modules/unpackfs.conf
fi

# Limpa e gera o packages.conf conforme a necessidade (lógica original mantida)
rm -f /etc/calamares/modules/packages.conf

if [ "$use_custom_desktop" = "yes" ]; then
echo '---
backend: pacman
skip_if_no_internet: false
update_db: true
update_system: true
pacman:
    num_retries: 10
    disable_download_timeout: true
    needed_only: true
operations:' > /etc/calamares/modules/packages.conf
    if [ "$remove_packages" != "" ]; then
        echo ' - remove:' >> /etc/calamares/modules/packages.conf
        sed -i '/pacman/s/-Rs/-Rcns/' /usr/lib/calamares/modules/chrootcfg/main.py &>/dev/null
        sed -i '/pacman/s/-Rs/-Rcns/' /usr/lib/calamares/modules/packages/main.py &>/dev/null
        echo "$remove_packages" | tr -d '\r' > /tmp/packageRemove
        sed -i 's/[ ]\+/ /g' /tmp/packageRemove
        sed -i 's/ /\n/g' /tmp/packageRemove
        for package in $(cat /tmp/packageRemove); do
            echo "   - $package" >> /etc/calamares/modules/packages.conf
        done
    fi
    if [ "$install_packages" != "" ]; then
        echo ' - install:' >> /etc/calamares/modules/packages.conf
        echo "$install_packages" | tr -d '\r' > /tmp/packageInstallList
        sed -i 's/[ ]\+/ /g' /tmp/packageInstallList
        sed -i 's/ /\n/g' /tmp/packageInstallList
        for package in $(cat /tmp/packageInstallList); do
            echo "   - $package" >> /etc/calamares/modules/packages.conf
        done
    fi
fi

if [ "$less_pkgs" = "yes" ]; then
    rm -f /tmp/listPkgsNoRemove.txt
    echo "$pkg_rm" | sudo tee /tmp/listPkgsNoRemove.txt >/dev/null
    sudo sed -i 's/;/\n/g' /tmp/listPkgsNoRemove.txt
    grep -Fxv -f "/tmp/listPkgsNoRemove.txt" "/tmp/pkgAvaliableToRemove.txt" > /tmp/listPkgsRemove
    if [ -s /tmp/listPkgsRemove ]; then
        if [ ! -f /etc/calamares/modules/packages.conf ]; then
            echo '---
backend: pacman
operations:' > /etc/calamares/modules/packages.conf
        fi
        if ! grep -q "\- remove:" /etc/calamares/modules/packages.conf; then
            echo ' - remove:' >> /etc/calamares/modules/packages.conf
        fi
        while IFS= read -r pkg_to_remove; do
            if pacman -Q "$pkg_to_remove" &> /dev/null; then
                echo "        - $pkg_to_remove" >>  /etc/calamares/modules/packages.conf
            fi
        done < /tmp/listPkgsRemove
    fi
fi

# ==============================================================================
# GERAÇÃO DO SETTINGS.CONF CORRIGIDO
# ==============================================================================
# Cria o template base com a sequência correta
cat > /etc/calamares/settings.conf <<'EOF'
---
modules-search: [ local ]

instances:
- id:       initialize_pacman
  module:   shellprocess
  config:   shellprocess_initialize_pacman.conf

- id:       displaymanager_biglinux
  module:   shellprocess
  config:   shellprocess_displaymanager_biglinux.conf

# Instâncias de módulos netinstall/packagechooser serão injetadas aqui

sequence:
    - show:
        - welcome
        - locale
        - keyboard
        - partition
        # Páginas de seleção de pacotes (show) serão injetadas aqui
        - users
        - summary
    - exec:
        - partition
        - mount
        - unpackfs
        - networkcfg
        - machineid
        - fstab
        - locale
        - keyboard
        - localecfg
        - shellprocess@initialize_pacman
        # O módulo 'packages' (exec) será injetado aqui se necessário
        - luksopenswaphookcfg
        - luksbootkeyfile
        - initcpiocfg
        - initcpio
        - users
        - displaymanager
        - mhwdcfg
        - hwclock
        - services
        - grubcfg
        - grubcfg-fix
        - bootloader
        - postcfg
        - btrfs-fix
        - umount
    - show:
        - finished
branding: biglinux
prompt-install: true
dont-chroot: false
oem-setup: false
disable-cancel: false
disable-cancel-during-exec: false
quit-at-end: false
EOF

# Injeta o módulo 'packages' na seção exec SE ele existir e for necessário
if [ -e /etc/calamares/modules/packages.conf ]; then
    if ! grep -q '        - packages' /etc/calamares/settings.conf; then
        sudo sed -i '/- shellprocess@initialize_pacman/a \        - packages' /etc/calamares/settings.conf
    fi
fi

# Injeta o gerenciador de display se necessário
if [ "$use_custom_desktop" = "yes" ] && [ "$login_manager" != "" ]; then
    if ! grep -q '        - shellprocess@displaymanager_biglinux' /etc/calamares/settings.conf; then
        # Inserir depois do módulo displaymanager padrão para sobrescrever
        sudo sed -i '/- displaymanager/a \        - shellprocess@displaymanager_biglinux' /etc/calamares/settings.conf
    fi
fi


# Lógica para XivaStudio
if [ -n "$(lsb_release -i | grep -i xivastudio)" ];then
    windowID="$(xprop -root '\t$0' _NET_ACTIVE_WINDOW | cut -f 2)"
    sleep 600 | zenity --attach="$windowID" --width=300 --progress --title=$"Wait..." --pulsate --no-cancel --auto-close --text $"Checking internet connection..." &
    while pgrep -x gpg > /dev/null; do sleep 0.5; done
    
    if sudo pacman -Sy >/dev/null 2>&1; then
        killall zenity
        if [ ! -e "/etc/calamares/modules/packages.conf" ];then
            echo '---
backend: pacman
operations:
 - install: []' > /etc/calamares/modules/packages.conf
        fi
        sudo cp -fa /usr/share/bigbashview/apps/calamares/netinstall-xivastudio.conf  /etc/calamares/modules/
        sudo cp -fa /usr/share/bigbashview/apps/calamares/netinstall-xivastudio.yaml  /etc/calamares/modules/

        if ! grep -q 'id:       xivastudio' /etc/calamares/settings.conf; then
            sudo sed -i '/^instances:/a \- id:       xivastudio\n  module:   netinstall\n  config:   netinstall-xivastudio.conf\n' /etc/calamares/settings.conf
        fi
        if ! grep -q 'netinstall@xivastudio' /etc/calamares/settings.conf; then
            sudo sed -i '/- partition/a \        - netinstall@xivastudio' /etc/calamares/settings.conf
        fi
        if ! grep -q '        - packages' /etc/calamares/settings.conf; then
            sudo sed -i '/- shellprocess@initialize_pacman/a \        - packages' /etc/calamares/settings.conf
        fi
    else
        killall zenity
        zenity --attach="$windowID" --error --width=300 --title=$"Internet" --text $"Without internet connection...\\nExtra packages installation disabled."
    fi
fi

# Adiciona a seleção de pacotes da comunidade se for a edição correta e estiver online
#if grep -qi bigcommunity /etc/os-release; then
if grep -qi bigcommunity /etc/os-release; then
#if true; then
    windowID="$(xprop -root '\t$0' _NET_ACTIVE_WINDOW | cut -f 2)"
    sleep 600 | zenity --attach="$windowID" --width=300 --progress --title=$"Wait..." --pulsate --no-cancel --auto-close --text $"Checking internet connection..." &
    # Espera o gpg terminar, se estiver em execução
    while pgrep -x gpg > /dev/null; do sleep 0.5; done

    # Tenta sincronizar os pacotes para verificar a conexão
    if sudo pacman -Sy >/dev/null 2>&1; then
        killall zenity

        # PASSO 1: Copia os arquivos de configuração necessários
        # Calamares usará estes arquivos com base nas configurações abaixo
        sudo cp -fa /usr/share/bigbashview/apps/calamares/welcome_online-community.conf /etc/calamares/modules/welcome_online.conf
        sudo cp -fa /usr/share/bigbashview/apps/calamares/packagechooser-community.conf  /etc/calamares/modules/packagechooser.conf
        sudo cp -fa /usr/share/bigbashview/apps/calamares/netinstall-community.conf /etc/calamares/modules/netinstall.conf
        sudo cp -fa /usr/share/bigbashview/apps/calamares/packages_online-community.conf /etc/calamares/modules/packages_online.conf
        
        # Garante que o netinstall.yaml exista
        sudo cp -fa /usr/share/bigbashview/apps/calamares/netinstall-community.yaml /etc/calamares/modules/netinstall.yaml


        # PASSO 2: Gera o settings.conf COMPLETO e CORRETO para o modo online/community
        cat > /etc/calamares/settings.conf <<'EOF'
---
modules-search: [ local ]

instances:
- id:       online
  module:   welcome
  config:   welcome_online.conf

- id:       online
  module:   packages
  config:   packages_online.conf

- id:       initialize_pacman
  module:   shellprocess
  config:   shellprocess_initialize_pacman.conf

- id:       displaymanager_biglinux
  module:   shellprocess
  config:   shellprocess_displaymanager_biglinux.conf

sequence:
    - show:
        - welcome@online
        - locale
        - keyboard
        - partition
        - packagechooser
        - netinstall
        - users
        - summary
    - exec:
        - partition
        - mount
        - unpackfs
        - networkcfg
        - machineid
        - fstab
        - locale
        - keyboard
        - localecfg
        - shellprocess@initialize_pacman
        - packages@online
        - luksopenswaphookcfg
        - luksbootkeyfile
        - initcpiocfg
        - initcpio
        - users
        - displaymanager
        - mhwdcfg
        - hwclock
        - services
        - grubcfg
        - grubcfg-fix
        - bootloader
        - postcfg
        - btrfs-fix
        - umount
    - show:
        - finished
        
branding: biglinux
prompt-install: true
dont-chroot: false
oem-setup: false
disable-cancel: false
disable-cancel-during-exec: false
quit-at-end: false
EOF

    else
        # Se não houver internet, exibe o erro e usa o settings.conf padrão (gerado no início do script)
        killall zenity
        zenity --attach="$windowID" --error --width=300 --title=$"Internet" --text $"Without internet connection...\\nExtra packages installation disabled."
    fi
fi

# ==============================================================================
# CONFIGURAÇÕES FINAIS (EXECUTADAS EM TODOS OS CASOS)
# ==============================================================================

# Configura a inicialização das chaves do pacman
echo '---
dontChroot: false
script:
 - "pacman-key --init"
 - command: "pacman-key --populate archlinux manjaro biglinux community"
   timeout: 1200
i18n:
 name: "Init pacman-key"' > /etc/calamares/modules/shellprocess_initialize_pacman.conf

# Configura a troca do gerenciador de display (se aplicável)
echo "---
dontChroot: false
script:
 - \"systemctl enable $login_manager\"
i18n:
 name: \"Enable login manager\"" > /etc/calamares/modules/shellprocess_displaymanager_biglinux.conf

# Restaura o separador de campo padrão
IFS=$OIFS

# Redireciona para a página de dicas antes de iniciar o Calamares
echo '
<body onload=window.location="tips.html">
'
